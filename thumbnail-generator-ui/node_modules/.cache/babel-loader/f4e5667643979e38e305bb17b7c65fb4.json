{"ast":null,"code":"var _jsxFileName = \"/home/cscovino/proof-of-concept/thumbnail-generator-ui/src/components/InputImage/index.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport { useDropzone } from 'react-dropzone';\nimport './index.css';\n\nfunction InputImage(props) {\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles[0]);\n    let reader = new FileReader();\n\n    reader.onload = ev => document.getElementById(\"preview\").src = ev.target.result;\n\n    reader.readAsDataURL(acceptedFiles[0]);\n    setData({ ...data,\n      textUpload: \"File: \" + acceptedFiles[0].name,\n      file: acceptedFiles[0]\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  const [data, setData] = useState({\n    textUpload: 'Click or Drop your file',\n    file: null,\n    interpolation: 'Lanczos3',\n    sizes: \"400x300,160x120,120x120\"\n  });\n\n  const sendImage = () => {\n    props.loadImages(data);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"input-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({\n    className: \"file-div\"\n  }, getRootProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), data.file === null ? React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"drag-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(CloudUploadOutlinedIcon, {\n    style: {\n      color: '#ffc901',\n      fontSize: '15vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"text-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, data.textUpload))) : React.createElement(\"img\", {\n    src: \"#\",\n    className: \"drag-file\",\n    alt: \"preview\",\n    id: \"preview\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"contained\",\n    onClick: sendImage,\n    style: {\n      backgroundColor: '#ffc901',\n      width: '80vw',\n      marginTop: '2vw'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"DO IT!\"));\n}\n\nexport default InputImage;","map":{"version":3,"sources":["/home/cscovino/proof-of-concept/thumbnail-generator-ui/src/components/InputImage/index.js"],"names":["React","useState","useCallback","useEffect","makeStyles","Button","CloudUploadOutlinedIcon","useDropzone","InputImage","props","onDrop","acceptedFiles","console","log","reader","FileReader","onload","ev","document","getElementById","src","target","result","readAsDataURL","setData","data","textUpload","name","file","getRootProps","getInputProps","interpolation","sizes","sendImage","loadImages","color","fontSize","backgroundColor","width","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,aAAP;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,MAAM,GAAGR,WAAW,CAACS,aAAa,IAAI;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAa,CAAC,CAAD,CAAzB;AACA,QAAIG,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgBC,EAAE,IAAIC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,GAAnC,GAAyCH,EAAE,CAACI,MAAH,CAAUC,MAAzE;;AACAR,IAAAA,MAAM,CAACS,aAAP,CAAqBZ,aAAa,CAAC,CAAD,CAAlC;AACAa,IAAAA,OAAO,CAAC,EACJ,GAAGC,IADC;AAEJC,MAAAA,UAAU,EAAE,WAAWf,aAAa,CAAC,CAAD,CAAb,CAAiBgB,IAFpC;AAGJC,MAAAA,IAAI,EAAEjB,aAAa,CAAC,CAAD;AAHf,KAAD,CAAP;AAKH,GAVyB,EAUvB,EAVuB,CAA1B;AAWA,QAAM;AAAEkB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkCvB,WAAW,CAAC;AAACG,IAAAA;AAAD,GAAD,CAAnD;AACA,QAAM,CAACe,IAAD,EAAOD,OAAP,IAAkBvB,QAAQ,CAAC;AAC7ByB,IAAAA,UAAU,EAAE,yBADiB;AAE7BE,IAAAA,IAAI,EAAE,IAFuB;AAG7BG,IAAAA,aAAa,EAAE,UAHc;AAI7BC,IAAAA,KAAK,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,SAAS,GAAG,MAAM;AACpBxB,IAAAA,KAAK,CAACyB,UAAN,CAAiBT,IAAjB;AACH,GAFD;;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC;AAAf,KAA8BI,YAAY,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACI,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAGQL,IAAI,CAACG,IAAL,KAAc,IAAd,GACA;AAAO,IAAA,OAAO,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,IAAI,CAACC,UADV,CAFA,CADJ,CADA,GAUA;AAAK,IAAA,GAAG,EAAC,GAAT;AAAa,IAAA,SAAS,EAAC,WAAvB;AAAmC,IAAA,GAAG,EAAC,SAAvC;AAAiD,IAAA,EAAE,EAAC,SAApD;AAA8D,IAAA,MAAM,EAAC,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbR,CADJ,EAkBI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,WADZ;AAEI,IAAA,OAAO,EAAEO,SAFb;AAGI,IAAA,KAAK,EAAE;AACHI,MAAAA,eAAe,EAAE,SADd;AAEHC,MAAAA,KAAK,EAAE,MAFJ;AAGHC,MAAAA,SAAS,EAAE;AAHR,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,CADJ;AAgCH;;AAED,eAAe/B,UAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadOutlinedIcon from '@material-ui/icons/CloudUploadOutlined';\nimport { useDropzone } from 'react-dropzone';\nimport './index.css';\n\nfunction InputImage(props) {\n    const onDrop = useCallback(acceptedFiles => {\n        console.log(acceptedFiles[0]);\n        let reader = new FileReader();\n        reader.onload = ev => document.getElementById(\"preview\").src = ev.target.result\n        reader.readAsDataURL(acceptedFiles[0])\n        setData({\n            ...data,\n            textUpload: \"File: \" + acceptedFiles[0].name,\n            file: acceptedFiles[0]\n        });\n    }, []);\n    const { getRootProps, getInputProps } = useDropzone({onDrop});\n    const [data, setData] = useState({\n        textUpload: 'Click or Drop your file',\n        file: null,\n        interpolation: 'Lanczos3',\n        sizes: \"400x300,160x120,120x120\"\n    });\n\n    const sendImage = () => {\n        props.loadImages(data)\n    }\n\n    return (\n        <div className=\"input-div\">\n            <div className=\"file-div\" {...getRootProps()}>\n                <input {...getInputProps()} />\n                {\n                    data.file === null ?\n                    <label htmlFor=\"contained-button-file\">\n                        <div className=\"drag-file\">\n                        <CloudUploadOutlinedIcon style={{color: '#ffc901', fontSize: '15vh'}} />\n                        <div className=\"text-file\">\n                            {data.textUpload}\n                        </div>\n                        </div>\n                    </label>\n                    :\n                    <img src=\"#\" className=\"drag-file\" alt=\"preview\" id=\"preview\" height=\"100%\" />\n                }\n            </div>\n            {/* <InterpolationSelect /> */}\n            <Button\n                variant=\"contained\"\n                onClick={sendImage}\n                style={{\n                    backgroundColor: '#ffc901', \n                    width: '80vw',\n                    marginTop: '2vw'\n                }}\n            >\n                DO IT!\n            </Button>\n        </div>\n    )\n}\n\nexport default InputImage"]},"metadata":{},"sourceType":"module"}