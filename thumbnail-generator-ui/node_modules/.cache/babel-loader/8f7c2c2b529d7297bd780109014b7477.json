{"ast":null,"code":"import { put, takeLatest, call, delay } from 'redux-saga/effects';\nimport { LOAD, LOAD_SUCCESS, LOAD_FAILED } from '../constants';\nimport { resizeImage } from '../api';\n\nfunction* handleImagesLoad(action) {\n  try {\n    const response = yield call(resizeImage, action.payload);\n\n    if (response.code !== 200) {\n      yield delay(500);\n      yield put({\n        type: LOAD_FAILED,\n        payload: response\n      });\n    } else {\n      yield delay(500);\n      yield put({\n        type: LOAD_SUCCESS,\n        payload: response.imagesResp\n      });\n    }\n  } catch (err) {\n    yield put({\n      type: LOAD_FAILED,\n      payload: {\n        code: 400,\n        message: err.message\n      }\n    });\n  }\n}\n\nexport default function* watchImagesLoad() {\n  yield takeLatest(LOAD, handleImagesLoad);\n}","map":{"version":3,"sources":["/home/cscovino/proof-of-concept/thumbnail-generator-ui/src/sagas/imagesSaga.js"],"names":["put","takeLatest","call","delay","LOAD","LOAD_SUCCESS","LOAD_FAILED","resizeImage","handleImagesLoad","action","response","payload","code","type","imagesResp","err","message","watchImagesLoad"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,KAAhC,QAA6C,oBAA7C;AAEA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,WAA7B,QAAgD,cAAhD;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AAC/B,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMR,IAAI,CAACK,WAAD,EAAcE,MAAM,CAACE,OAArB,CAA3B;;AACA,QAAGD,QAAQ,CAACE,IAAT,KAAkB,GAArB,EAAyB;AACrB,YAAMT,KAAK,CAAC,GAAD,CAAX;AACA,YAAMH,GAAG,CAAC;AAAEa,QAAAA,IAAI,EAAEP,WAAR;AAAqBK,QAAAA,OAAO,EAAED;AAA9B,OAAD,CAAT;AACH,KAHD,MAGO;AACH,YAAMP,KAAK,CAAC,GAAD,CAAX;AACA,YAAMH,GAAG,CAAC;AAAEa,QAAAA,IAAI,EAAER,YAAR;AAAsBM,QAAAA,OAAO,EAAED,QAAQ,CAACI;AAAxC,OAAD,CAAT;AACH;AACJ,GATD,CASE,OAAOC,GAAP,EAAY;AACV,UAAMf,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAEP,WAAR;AAAqBK,MAAAA,OAAO,EAAE;AAACC,QAAAA,IAAI,EAAE,GAAP;AAAYI,QAAAA,OAAO,EAAED,GAAG,CAACC;AAAzB;AAA9B,KAAD,CAAT;AACH;AACJ;;AAED,eAAe,UAAUC,eAAV,GAA4B;AACvC,QAAMhB,UAAU,CAACG,IAAD,EAAOI,gBAAP,CAAhB;AACH","sourcesContent":["import { put, takeLatest, call, delay } from 'redux-saga/effects';\n\nimport { LOAD, LOAD_SUCCESS, LOAD_FAILED } from '../constants';\nimport { resizeImage } from '../api';\n\nfunction* handleImagesLoad(action) {\n    try {\n        const response = yield call(resizeImage, action.payload);\n        if(response.code !== 200){\n            yield delay(500)\n            yield put({ type: LOAD_FAILED, payload: response });\n        } else {\n            yield delay(500)\n            yield put({ type: LOAD_SUCCESS, payload: response.imagesResp });\n        }\n    } catch (err) {\n        yield put({ type: LOAD_FAILED, payload: {code: 400, message: err.message} });\n    }\n}\n\nexport default function* watchImagesLoad() {\n    yield takeLatest(LOAD, handleImagesLoad);\n}"]},"metadata":{},"sourceType":"module"}