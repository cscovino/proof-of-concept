{"ast":null,"code":"var _jsxFileName = \"/home/cscovino/proof-of-concept/thumbnail-generator-ui/src/views/SelectImage/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PanoramaIcon from '@material-ui/icons/Panorama';\nimport { loadImages, resetImages } from '../../actions';\nimport Header from '../../components/Header';\nimport InputImage from '../../components/InputImage';\nimport LoadingAnim from '../../components/LoadingAnim';\nimport ImagesContainer from '../../components/ImagesContainer';\nimport './index.css';\nimport AlertDialog from '../../components/AlertDialog';\n\nfunction App(props) {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Header, {\n    title: \"Thumbnail\",\n    subtitle: \"Generator\",\n    icon: React.createElement(PanoramaIcon, {\n      style: {\n        color: '#ffc901',\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(AlertDialog, {\n    open: props.error !== null,\n    message: props.error !== null ? props.error.message : \"\",\n    code: props.error !== null ? props.error.code : 404,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"body-div\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.isLoading ? React.createElement(LoadingAnim, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : props.images.length !== 0 ? React.createElement(ImagesContainer, {\n    images: props.images,\n    resetImages: props.resetImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }) : React.createElement(InputImage, {\n    loadImages: props.loadImages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    images: state.imagesReducer.images,\n    isLoading: state.imagesReducer.isLoading,\n    error: state.imagesReducer.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  loadImages: payload => dispatch(loadImages(payload)),\n  resetImages: () => dispatch(resetImages())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/cscovino/proof-of-concept/thumbnail-generator-ui/src/views/SelectImage/index.js"],"names":["React","connect","PanoramaIcon","loadImages","resetImages","Header","InputImage","LoadingAnim","ImagesContainer","AlertDialog","App","props","color","marginRight","error","message","code","isLoading","images","length","mapStateToProps","state","imagesReducer","mapDispatchToProps","dispatch","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,eAAxC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAO,aAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE,WADT;AAEE,IAAA,QAAQ,EAAE,WAFZ;AAGE,IAAA,IAAI,EACF,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,WAAW,EAAE;AAAhC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAEF,KAAK,CAACG,KAAN,KAAc,IADtB;AAEE,IAAA,OAAO,EAAEH,KAAK,CAACG,KAAN,KAAc,IAAd,GAAmBH,KAAK,CAACG,KAAN,CAAYC,OAA/B,GAAuC,EAFlD;AAGE,IAAA,IAAI,EAAEJ,KAAK,CAACG,KAAN,KAAc,IAAd,GAAmBH,KAAK,CAACG,KAAN,CAAYE,IAA/B,GAAoC,GAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIL,KAAK,CAACM,SAAN,GAEA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAIAN,KAAK,CAACO,MAAN,CAAaC,MAAb,KAAwB,CAAxB,GAEA,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAER,KAAK,CAACO,MAA/B;AAAuC,IAAA,WAAW,EAAEP,KAAK,CAACP,WAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAIA,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEO,KAAK,CAACR,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CAZF,CADF;AA4BD;;AAED,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACC,aAAN,CAAoBJ,MADvB;AAELD,IAAAA,SAAS,EAAEI,KAAK,CAACC,aAAN,CAAoBL,SAF1B;AAGLH,IAAAA,KAAK,EAAEO,KAAK,CAACC,aAAN,CAAoBR;AAHtB,GAAP;AAKD,CAND;;AAQA,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,UAAU,EAAGsB,OAAD,IAAaD,QAAQ,CAACrB,UAAU,CAACsB,OAAD,CAAX,CADO;AAExCrB,EAAAA,WAAW,EAAE,MAAMoB,QAAQ,CAACpB,WAAW,EAAZ;AAFa,CAAf,CAA3B;;AAKA,eAAeH,OAAO,CACpBmB,eADoB,EAEpBG,kBAFoB,CAAP,CAGbb,GAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PanoramaIcon from '@material-ui/icons/Panorama';\nimport { loadImages, resetImages } from '../../actions';\nimport Header from '../../components/Header';\nimport InputImage from '../../components/InputImage';\nimport LoadingAnim from '../../components/LoadingAnim';\nimport ImagesContainer from '../../components/ImagesContainer'\nimport './index.css';\nimport AlertDialog from '../../components/AlertDialog';\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Header \n        title={\"Thumbnail\"} \n        subtitle={\"Generator\"} \n        icon={\n          <PanoramaIcon style={{color: '#ffc901', marginRight: 10}} />\n        } \n      />\n      <AlertDialog \n        open={props.error!==null} \n        message={props.error!==null?props.error.message:\"\"} \n        code={props.error!==null?props.error.code:404} />\n      <div className=\"body-div\">\n        {\n          props.isLoading \n          ?\n          <LoadingAnim />\n          :\n          props.images.length !== 0\n          ?\n          <ImagesContainer images={props.images} resetImages={props.resetImages} />\n          :\n          <InputImage loadImages={props.loadImages} />\n        }\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    images: state.imagesReducer.images,\n    isLoading: state.imagesReducer.isLoading,\n    error: state.imagesReducer.error\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadImages: (payload) => dispatch(loadImages(payload)),\n  resetImages: () => dispatch(resetImages())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n"]},"metadata":{},"sourceType":"module"}